

 The main execution of a C program begins in the aptly named main()
function. Any text following two forward slashes ( // ) is a comment, which is
ignored by the compiler.


The first line may be confusing, but it’s just C syntax that tells the compiler 
to include headers for a standard input/output (I/O) library named
stdio.h This header file is added to the program when it is compiled. It is
located at /usr/include/stdio.h, and it defines several constants and function
 prototypes for corresponding functions in the standard I/O library.
Since the main() function uses the printf() function from the standard I/O

library, a function prototype is needed for printf() before it can be used.
This function prototype (along with many others) is included in the stdio.h
header file. A lot of the power of C comes from its extensibility and libraries.
The rest of the code should make sense and look a lot like the pseudo-code
from before. You may have even noticed that there’s a set of curly braces that
can be eliminated. It should be fairly obvious what this program will do, but
let’s compile it using GCC and run it just to make sure.

The GNU Compiler Collection (GCC) is a free C compiler that translates C
into machine language that a processor can understand. The outputted trans-
lation is an executable binary file, which is called a.out by default. Does the
compiled program do what you thought it would?
